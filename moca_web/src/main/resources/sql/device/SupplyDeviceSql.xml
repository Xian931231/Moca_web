<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mocafelab.web.device.SupplyDeviceMapper">

	<!-- 매체현황 > 장비 오류 현황 리스트 -->
	<select id="getDeviceErrorList" parameterType="HashMap" resultType="HashMap">
		SELECT
			ROW_NUMBER() OVER(ORDER BY 
			<choose>
				<when test='product_sort == "PA" and error_sort == null'>
					sp.product_name DESC, sd.update_date ASC
				</when>
				<when test='error_sort == "EA" and product_sort == null'>
					sd.update_date DESC
				</when>
				<when test='product_sort == "PD" and error_sort == null'>
					sp.product_name ASC, sd.update_date ASC
				</when>
				<otherwise>
					sd.update_date ASC, sp.product_name ASC				
				</otherwise>
			</choose>
			) AS seq
			, sp.product_name 
			, sd.serial_number 
			, sd.status 
			, to_char(sd.update_date, 'HH24:MI:SS') AS update_date
		FROM
			public.ssp_device sd
		JOIN public.ssp_product sp
		ON sp.id = sd.product_id 
		WHERE
			(sd.status = 'R' OR sd.status = 'D')
		AND to_char(sd.update_date, 'YYYY-MM-DD') = to_char(#{standard_date}::date - interval '1 days', 'YYYY-MM-DD')
		AND sd.member_id = #{login_id}::bigint
		ORDER BY 
		<choose>
			<when test='product_sort == "PA" and error_sort == null'>
					sp.product_name ASC, sd.update_date DESC
				</when>
				<when test='error_sort == "EA" and product_sort == null'>
					sd.update_date ASC
				</when>
				<when test='product_sort == "PD" and error_sort == null'>
					sp.product_name DESC, sd.update_date DESC
				</when>
			<otherwise>
				sd.update_date DESC, sp.product_name DESC				
			</otherwise>
		</choose>
	</select>
	
	<!-- 매체현황 > 장비 오류 현황 개수 -->
	<select id="getDeviceErrorCnt" parameterType="HashMap" resultType="Integer">
		SELECT
			COUNT(*) 
		FROM
			public.ssp_device sd
		JOIN public.ssp_product sp
		ON sp.id = sd.product_id 
		WHERE
			(sd.status = 'R' OR sd.status = 'D')
		AND to_char(sd.update_date, 'YYYY-MM-DD') = to_char(#{standard_date}::date - interval '1 days', 'YYYY-MM-DD')
		AND sd.member_id = #{login_id}::bigint
	</select>

	<!-- 상품관리 > 디바이스 관리 목록 -->
	<select id="getDeviceList" parameterType="HashMap" resultType="HashMap">
		SELECT 
			device_t.*
			, coalesce(schedule_t.slot_cnt, 0) AS slot_cnt
		<include refid="device_sql"></include> 
		ORDER BY device_insert_date DESC 
		<if test='limit != null and offset != null'>
		LIMIT #{limit} OFFSET #{offset}
		</if>	
	</select>
	
	<!-- 상품관리 > 디바이스 관리 개수 -->
	<select id="getDeviceCnt" parameterType="HashMap" resultType="Integer">
		SELECT
			COUNT(*)
		<include refid="device_sql"></include> 
	</select>
	
	<sql id="device_sql">
		FROM
			(
				SELECT 
					  sd.id AS device_id
					, sd.product_id
					, sd.serial_number
					, sd.status 
					, sd.notes
					, coalesce (sd.motor_id, 0) AS motor_id
					, to_char(sd.insert_date, 'YYYY-MM-DD HH24:MI:SS') AS device_insert_date
					, sp.product_name 
					, sp.screen_resolution 
					, sm.car_number
				FROM
					public.ssp_device sd 
				JOIN public.ssp_product sp
				ON sp.id = sd.product_id
				LEFT JOIN public.ssp_motor sm
				ON sm.id = sd.motor_id
				JOIN public.schedule_product sp2 
				ON sp2.product_id = sp.id 
				WHERE sd.member_id = #{login_id}::bigint
				<if test='status != null and status != ""'>
				AND sd.status = #{status}
				</if>
				<choose>
					<when test='search_type == "P" and search_value != null and search_value != ""'>
					AND sp.product_name LIKE CONCAT ('%', #{search_value}, '%')
					</when>
					<when test='search_type == "S" and search_value != null and search_value != ""'>
					AND sd.serial_number LIKE CONCAT ('%', #{search_value}, '%')
					</when> 
					<when test='search_type == "C" and search_value != null and search_value != ""'>
					AND car_number LIKE CONCAT ('%', #{search_value}, '%')
					</when> 
				</choose>
			) AS device_t
		JOIN (
				SELECT 
					  scp.product_id
					, s.cpp_slot_count + s.cpm_slot_count AS slot_cnt
				FROM 
					public.schedule_product scp 
				JOIN public.schedule s
				ON s.id = scp.schedule_id
			) AS schedule_t
		ON schedule_t.product_id = device_t.product_id 
	</sql>
</mapper>